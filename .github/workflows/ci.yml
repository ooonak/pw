name: CI

on:
  workflow_dispatch:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: "0 6 * * 1-5"

# ensure that the workflow is only triggered once per PR,  subsequent pushes to the PR will cancel
# and restart the workflow. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

# lint, clippy and coverage jobs are intentionally early in the workflow to catch simple formatting,
# typos, and missing tests as early as possible. This allows us to fix these and resubmit the PR
# without having to wait for the comprehensive matrix of tests to complete.
jobs:
  check:
    name: Lints, fmt, typos, check, clippy, deny, machete, semver.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Stable Rust toolchain
        run: rustup update stable && rustup default stable

      - name: Setup rust-cache
        uses: Swatinem/rust-cache@v2

      - name: Install Protocol Buffers compiler
        uses: arduino/setup-protoc@v3

      - name: Install latest cargo-deny
        uses: taiki-e/install-action@cargo-deny

      - name: Install latest cargo-machete
        uses: taiki-e/install-action@cargo-machete

      - name: Install latest cargo-semver-checks
        uses: taiki-e/install-action@cargo-semver-checks

      - name: Check spelling with typos
        uses: crate-ci/typos@master

      - name: Code format check
        run: cargo fmt --all --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- --deny warnings

      - name: Check dependencies with deny
        run: cargo deny check

      - name: Check unused dependencies
        run: cargo machete

      #- name: Check SemVer compatibility
      #  run: cargo semver-checks --verbose

  test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - name: Install Protocol Buffers compiler
        uses: arduino/setup-protoc@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Build
        run: cargo build --verbose

      - name: Test
        run: cargo test --all-features --verbose
