name: Continuous Integration

on:
  workflow_dispatch:

# ensure that the workflow is only triggered once per PR,  subsequent pushes to the PR will cancel
# and restart the workflow. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env: 
  CARGO_TERM_COLOR: always

jobs:
  # Lint the formatting of the codebase.
  lint-formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with: { components: rustfmt }
      - run: cargo xtask lint-formatting

  # Check for typos in the codebase.
  # See <https://github.com/crate-ci/typos/>
  lint-typos:
    name: Check Typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@master

  # Check for any disallowed dependencies in the codebase due to license / security issues.
  # See <https://github.com/EmbarkStudios/cargo-deny>
  dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2

  # Check for any unused dependencies in the codebase.
  # See <https://github.com/bnjbvr/cargo-machete/>
  cargo-machete:
    name: Check Unused Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: bnjbvr/cargo-machete@v0.7.0

  lint-clippy:
    name: Check Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with: { components: clippy }
      - uses: Swatinem/rust-cache@v2
      - run: cargo xtask lint-clippy

  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: arduino/setup-protoc@v3
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --verbose